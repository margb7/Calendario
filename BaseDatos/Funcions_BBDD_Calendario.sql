## Tabla con códigos de erro ##
-- 45001 -> usuario non atopado

DELIMITER $$

USE CALENDARIO$$

## Rexistra un usuario e devolve a clave do novo usuario
## Código 1062 se o nome xa está rexistrado
DROP PROCEDURE IF EXISTS REXISTRAR_USUARIO$$
CREATE PROCEDURE REXISTRAR_USUARIO(IN NOME_USUARIO VARCHAR(20), IN PASSWD VARCHAR(30))
    MODIFIES SQL DATA
    BEGIN
		
        INSERT INTO USUARIOS(NOME, PASSWD) VALUES (NOME_USUARIO, PASSWD);
		SELECT ID_USUARIO
			FROM USUARIOS
            WHERE NOME = NOME_USUARIO;
        
    END$$
    
DROP PROCEDURE IF EXISTS BORRAR_USUARIO$$
CREATE PROCEDURE BORRAR_USUARIO(IN ID_USER INT UNSIGNED)
    MODIFIES SQL DATA
    BEGIN
    
        DELETE FROM USUARIOS
            WHERE ID_USUARIO = ID_USER;
    
    END$$



DROP PROCEDURE IF EXISTS CREAR_EVENTO_PUBLICO$$
CREATE PROCEDURE CREAR_EVENTO_PUBLICO(IN NOME_EV VARCHAR(25), IN ID_CREAD INT UNSIGNED, IN DATA_EV DATE, IN HORA_EV TIME)
    MODIFIES SQL DATA
    BEGIN
    
        INSERT INTO EVENTOS(NOME, DATA_EVENTO, HORA, CREADOR) VALUES (NOME_EV, DATA_EV, HORA_EV, ID_CREAD);
        
        SELECT ID_EVENTO INTO @ID_EV
            FROM EVENTOS
            WHERE NOME = NOME_EV AND CREADOR = ID_CREAD;

        INSERT INTO EVENTOS_PUBLICOS(EVENTO) VALUES (@ID_EV);
        
        SELECT @ID_EV;
        
    END$$
    


DROP PROCEDURE IF EXISTS CREAR_EVENTO_PRIVADO$$
CREATE PROCEDURE CREAR_EVENTO_PRIVADO(IN NOME_EV VARCHAR(25), IN ID_CREAD INT UNSIGNED, IN DATA_EV DATE, IN HORA_EV TIME)
    MODIFIES SQL DATA
    BEGIN
    
        INSERT INTO EVENTOS(NOME, DATA_EVENTO, HORA, CREADOR) VALUES (NOME_EV, DATA_EV, HORA_EV, ID_CREAD);
        
        SELECT ID_EVENTO INTO @ID_EV
            FROM EVENTOS
            WHERE NOME = NOME_EV AND CREADOR = ID_CREAD;

        INSERT INTO EVENTOS_PRIVADOS(EVENTO) VALUES (@ID_EV);
        
        SELECT @ID_EV;
        
    END$$
        
DROP PROCEDURE IF EXISTS CREAR_EVENTO_GRUPAL$$
CREATE PROCEDURE CREAR_EVENTO_GRUPAL(IN NOME_EV VARCHAR(25), IN ID_CREAD INT UNSIGNED, IN DATA_EV DATE, IN HORA_EV TIME)
    MODIFIES SQL DATA
    BEGIN
    
        INSERT INTO EVENTOS(NOME, DATA_EVENTO, HORA, CREADOR) VALUES (NOME_EV, DATA_EV, HORA_EV, ID_CREAD);
        
        SELECT ID_EVENTO INTO @ID_EV
            FROM EVENTOS
            WHERE NOME = NOME_EV AND CREADOR = ID_CREAD;

        INSERT INTO EVENTOS_GRUPAIS(EVENTO) VALUES (@ID_EV);
        
        INSERT INTO GRUPAIS_USUARIOS(EVENTO_GRUPAL, USUARIO) VALUES (@ID_EV, ID_CREAD);
        
        SELECT @ID_EV;
        
    END$$



DROP PROCEDURE IF EXISTS REXISTRAR_EN_EVENTO_GRUPAL$$
CREATE PROCEDURE REXISTRAR_EN_EVENTO_GRUPAL(IN ID_EV INT UNSIGNED,IN ID_USER INT UNSIGNED )
    MODIFIES SQL DATA
    BEGIN
    
        INSERT INTO GRUPAIS_USUARIOS(EVENTO_GRUPAL, USUARIO) VALUES (ID_EV, ID_USER);
        
    END$$


DROP PROCEDURE IF EXISTS OBTER_EVENTOS_PUBLICOS$$
CREATE PROCEDURE OBTER_EVENTOS_PUBLICOS(IN DIA_EV DATE)
	READS SQL DATA
    BEGIN
    
		SELECT ID_EVENTO, 
				NOME, 
                CREADOR, 
                HORA 
			FROM VISTA_EVENTOS_PUBLICOS 
            WHERE DATA_EVENTO = DIA_EV;
    
    END$$
    


DROP PROCEDURE IF EXISTS OBTER_EVENTOS_PRIVADOS$$
CREATE PROCEDURE OBTER_EVENTOS_PRIVADOS(IN ID_USER INT UNSIGNED, IN DIA_EV DATE)
	READS SQL DATA
    BEGIN
    
		SELECT ID_EVENTO, 
				NOME, 
                CREADOR, 
                HORA 
			FROM VISTA_EVENTOS_PRIVADOS 
            WHERE CREADOR = ID_USER AND DATA_EVENTO = DIA_EV;
    
    END$$
    
    

DROP PROCEDURE IF EXISTS OBTER_EVENTOS_GRUPAIS$$
CREATE PROCEDURE OBTER_EVENTOS_GRUPAIS(IN ID_USER INT UNSIGNED, IN DIA_EV DATE)
	READS SQL DATA
    BEGIN
    
		SELECT ID_EVENTO, 
				NOME, 
                CREADOR, 
                HORA 
			FROM VISTA_EVENTOS_GRUPAIS 
            WHERE USUARIO = ID_USER AND DATA_EVENTO = DIA_EV;
    
    END$$



DROP PROCEDURE IF EXISTS OBTER_NOME_USUARIO$$
CREATE PROCEDURE OBTER_NOME_USUARIO(IN ID_USER INT UNSIGNED)
	READS SQL DATA
    BEGIN
    
		SELECT NOME
			FROM USUARIOS 
            WHERE ID_USUARIO = ID_USER;
    
    END$$
    
    
    
DROP PROCEDURE IF EXISTS ESTA_USUARIO_REXISTRADO$$
CREATE PROCEDURE ESTA_USUARIO_REXISTRADO(IN NOM VARCHAR(25))
	READS SQL DATA
    BEGIN
    
		DECLARE SALIDA INT UNSIGNED;
        
        SET SALIDA = (SELECT ID_USUARIO
						FROM USUARIOS
                        WHERE NOME = NOM
                        );
		
        IF SALIDA IS NULL
        THEN 
        
			SET SALIDA = 0;
            
		END IF;
        
        SELECT SALIDA;
        
	END$$
    

DELIMITER ;